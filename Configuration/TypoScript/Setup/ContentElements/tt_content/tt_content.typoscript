# Typo3 Layout Optionen Content-Elemente
tt_content {
    stdWrap.innerWrap.cObject = CASE
    stdWrap.innerWrap.cObject {
        key.field = layout

        1 = TEXT
        1.value = <div class="row"><div class="col-12 offset-xl-2 col-xl-8">|</div></div>

        2 = TEXT
        2.value = <div class="row"><div class="col-12 offset-xl-1 col-xl-10">|</div></div>
    }
}

#=========================================================#
# Content element
#=========================================================#
lib.containerContentElement < lib.contentElement
lib.containerContentElement {
  layoutRootPaths.0 = EXT:gsb_template/Resources/Private/Layouts/
  layoutRootPaths.10 = {$plugin.containerContentElement.view.layoutRootPath}
  partialRootPaths.0 = EXT:gsb_template/Resources/Private/Partials/Content
  partialRootPaths.10 = {$plugin.containerContentElement.view.partialRootPath}
  templateRootPaths.0 = EXT:gsb_template/Resources/Private/Templates/ContentElements
  templateRootPaths.10 = {$plugin.containerContentElement.view.templateRootPath}
}

tt_content.ce_container < lib.containerContentElement
tt_content.ce_container.templateName = Container
tt_content.ce_columns2 =< lib.containerContentElement
tt_content.ce_columns2.templateName = Columns2
tt_content.ce_columns3 =< lib.containerContentElement
tt_content.ce_columns3.templateName = Columns3
tt_content.ce_columns4 =< lib.containerContentElement
tt_content.ce_columns4.templateName = Columns4
tt_content.ce_tabs =< lib.containerContentElement
tt_content.ce_tabs.templateName = Tabs
tt_content.ce_accordion =< lib.containerContentElement
tt_content.ce_accordion.templateName = Accordion

tt_content.ce_slider < lib.contentElement
tt_content.ce_slider {
  templateName = Slider
  templateRootPaths {
    10 = EXT:gsb_template/Resources/Private/Templates/Content/General/
  }
  dataProcessing {
    200 = B13\Container\DataProcessing\ContainerProcessor
    200 {
      colPos = 200
      as = children_101
    }
  }
}


#===========================================================================================#
# Container content, used in fluid templates
#
# Basically we pass the already rendered content through to have a unique way of rendering
# the content by using:
#
# `{f:cObject(typoscriptObjectPath: 'lib.gsbContainer.renderContent', data: record)}`
#
#===========================================================================================#

lib.gsbContainer {
  renderContent = TEXT
  renderContent.field = renderedContent
}
