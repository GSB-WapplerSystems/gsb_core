lib {
  pageurl = TEXT
  pageurl.data = getIndpEnv:TYPO3_REQUEST_URL

  pageid = TEXT
  pageid.data = page:uid

  math = TEXT
  math {
    current = 1
    prioriCalc = 1
  }

  home = TEXT
  home.value = {$config.pids.Home}

  parseFunc_RTE {
    externalBlocks {
      table {
        stdWrap {
          HTMLparser = 1
          HTMLparser {
            tags {
              table {
                fixAttrib {
                  class {
                    default = table table-striped table-hover
                    always = 1
                    list = table table-striped table-hover
                  }
                }
              }
            }
          }
        }
      }
    }
    tags {
      a {
        postCObject = COA
        postCObject {
          10 = FILES
          10 {
            stdWrap.if {
              equals = t3://file
              value {
                data = parameters:href
                stdWrap.substring = 0,9
              }
            }
            files {
              // variant 1 to grab file uid
              data = parameters:href
              // replace string before uid
              replacement {
                10 {
                  search = t3://file?uid=
                  replace =
                }
              }
            }
            renderObj = COA
            renderObj {
              10 = TEXT
              10 {
                data = file:current:extension
                stdWrap.case = upper
                noTrimWrap = | [|
              }
              20 = TEXT
              20 {
                data = file:current:size
                insertData = 1
                bytes = 1
                bytes.labels = "B|KB|MB|GB"
                noTrimWrap = |, |]|
              }
            }
          }
        }
        // add default title and e.g: download attribute
        typolink.ATagParams.stdWrap.outerWrap.cObject = COA
        typolink.ATagParams.stdWrap.outerWrap.cObject {
          10 = FILES
          10 {
            stdWrap.if {
              equals = t3://file
              value {
                data = parameters:href
                stdWrap.substring = 0,9
              }
            }
            files {
              // variant 2 to grab file uid
              data = parameters:href
              // split by =  and return second value
              split {
                token.char = 61
                returnKey = 1
              }
            }
            renderObj = COA
            renderObj {
              // add title, if not set
              10 = TEXT
              10 {
                noTrimWrap = | title="Download: |" |
                data = file:current:download_name // file:current:name
                stdWrap {
                  dataWrap = |.{file:current:extension}
                  dataWrap.if.isTrue.data = file:current:download_name
                }
              }
              // add download name or other attributes
              20 = TEXT
              20 {
                noTrimWrap = | download="|" |
                data = file:current:download_name // file:current:name
                stdWrap {
                  dataWrap = |.{file:current:extension}
                  dataWrap.if.isTrue.data = file:current:download_name
                }
              }
            }
          }
        }
      }
    }
  }
}
