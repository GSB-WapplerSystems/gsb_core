@import 'EXT:gsb_core/Configuration/TypoScript/Helper/PageClass.typoscript'
@import 'EXT:gsb_core/Configuration/TypoScript/Setup/Page/*.typoscript'
@import 'EXT:gsb_core/Configuration/TypoScript/Setup/*.typoscript'
@import 'EXT:gsb_core/Configuration/TypoScript/Setup/ContentElements/tt_content/'
@import 'EXT:gsb_core/Configuration/TypoScript/Setup/Extensions/*.typoscript'
@import 'EXT:gsb_core/Configuration/Extensions/setup.typoscript'
@import 'EXT:gsb_core/Configuration/TypoScript/Setup/ContentElements/setup.typoscript'

lib.parseFunc_RTE {
  tags {
    a {
      postCObject = COA
      postCObject {
        10 = FILES
        10 {
          stdWrap.if {
            equals = t3://file
            value {
              data = parameters:href
              stdWrap.substring = 0,9
            }
          }
          files {
            // variant 1 to grab file uid
            data = parameters:href
            // replace string before uid
            replacement {
              10 {
                search = t3://file?uid=
                replace =
              }
            }
          }
          renderObj = COA
          renderObj {
            10 = TEXT
            10 {
              data = file:current:extension
              stdWrap.case = upper
              noTrimWrap = | [|
            }
            20 = TEXT
            20 {
              data = file:current:size
              insertData = 1
              bytes = 1
              bytes.labels = "B|KB|MB|GB"
              noTrimWrap = |, |]|
            }
          }
        }
      }
      // add default title and e.g: download attribute
      typolink.ATagParams.stdWrap.outerWrap.cObject = COA
      typolink.ATagParams.stdWrap.outerWrap.cObject {
        10 = FILES
        10 {
          stdWrap.if {
            equals = t3://file
            value {
              data = parameters:href
              stdWrap.substring = 0,9
            }
          }
          files {
            // variant 2 to grab file uid
            data = parameters:href
            // split by =  and return second value
            split {
              token.char = 61
              returnKey = 1
            }
          }
          renderObj = COA
          renderObj {
            // add title, if not set
            10 = TEXT
            10 {
              noTrimWrap = | title="Download: |" |
              data = file:current:download_name // file:current:name
              stdWrap.dataWrap = |.{file:current:extension}
              stdWrap.dataWrap.if.isTrue.data = file:current:download_name
            }
            // add download name or other attributes
            20 = TEXT
            20 {
              noTrimWrap = | download="|" |
              data = file:current:download_name // file:current:name
              stdWrap.dataWrap = |.{file:current:extension}
              stdWrap.dataWrap.if.isTrue.data = file:current:download_name
            }
          }
        }
      }
    }
  }
}
